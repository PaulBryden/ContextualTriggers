class IntervalsDataManager
!!!155778.java!!!	onBind(inout intent : Intent) : IBinder
        setup();
        return binder;
!!!156034.java!!!	IntervalsDataManager()
        super(60, 600);
        setup();
!!!156290.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        super.onStartCommand(intent, flags, startId);
        monitor();
        alarm();
        return START_STICKY;
!!!156418.java!!!	monitor() : void

        if (ContextCompat.checkSelfPermission(this, ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED)
               {   // Permission is not granted
                   // Should we show an explanation?
                    if (ActivityCompat.shouldShowRequestPermissionRationale(MainApplication.getAppActivity(),
                            ACCESS_FINE_LOCATION)) {
                        Intent i = new Intent(this, RequestLocationPermission.class);
                        startActivity(i);

                    } else {
                        // No explanation needed; request the permission
                        ActivityCompat.requestPermissions(MainApplication.getAppActivity(),
                                new String[]{ACCESS_FINE_LOCATION},
                                MY_PERMISSIONS_REQUEST_READ_CONTACTS);

                    }
                } else {
            Awareness.getSnapshotClient(getApplicationContext()).getTimeIntervals().addOnFailureListener(new OnFailureListener() {
                @Override
                public void onFailure(@NonNull Exception e) {
                    Log.d("IntervalsDataManager", e.getMessage());
                }
            }).addOnSuccessListener(new OnSuccessListener<TimeIntervalsResponse>() {
                @Override
                public void onSuccess(TimeIntervalsResponse timeIntervalsResponse) {
                    // parse and display current weather status
                    TimeIntervals intervals = timeIntervalsResponse.getTimeIntervals();
                    Log.d("IntervalsDM", intervals.toString());
                    sendUpdate(new TimeOfDayData(intervals.getTimeIntervals()));
                }
            });
        }
